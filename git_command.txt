查看邮箱 	git config user.email
查看用户名 	git config user.name
修改用户名 	git --global user.name "name"
修改邮箱 git --global user.email "email@email.com"
查看远程地址 git remote -v
查看git版本 git --version
查看git当前状态 git status
打印log git log
回退上一个版本 git reset --hard head^ 
回退当前版本 git reset --hard head 
回退前100个版本 git reset --hard ~100
回退到某一id的版本 git reset --hard [id]
撤销暂存区的版本 git reset head file 然后 checkout 撤销工作区的修改
对比工作区和版本库的差异 git diff --filename
撤销工作区的修改 git checkout -- file
删除文件 rm filename
git删除文件 git rm filename 然后提交
获取sshkey ssh-keygen -t rsa -C "youremail@example.com"
将本地仓库关联到远程仓库 git remote add repository_name git@github.com:michaelliao/learngit.git
首次推动 git push -u repository_name master
克隆远程仓库 git clone git@github.com:michaelliao/gitskills.git
移除远程库 git remote rm origin
查看分支 git branch
创建并切换到分支 git checkout -b dev dev为分支名
创建分支 git branch dev
切换分支 git checkout dev
合并分支 git merge dev
删除分支 git branch -d dev
如果分支未合并就要删除，需要强行删除分支git branch -D feature-vulcan
合并保存分支信息并commit git merge --no-ff -m “merge”
保存临时工作状态 git stash  使用git stash list查看  git stash apply恢复但是恢复之后要使用git stash drop 删除stash
恢复工作状态并删除stash git stash pop
恢复指定工作状态 git stash apply stash@{no.}
从远程仓库pull前 指定分支dev git branch --set-upstream-to origin/dev
在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；
有参数的log git log --pretty=oneline --abbrev-commit
在当前分支打tag，默认打在最新commit上的 git tag v1.0，或者git tag v1.0 versionCode(6224937)
查看tag git tag
创建带有说明的标签，用-a指定标签名，-m指定说明文字：git tag -a v0.1 -m "version 0.1 released" 3628164
删除标签 git tag -d v0.1
如果要推送某个标签到远程，使用命令git push origin <tagname>：
推送全部tag git push origin --tags
删除远程tag git push origin :refs/tags/v0.9